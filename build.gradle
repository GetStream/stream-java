plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'signing'
    id "com.scuilion.syntastic" version "0.3.8"
    id "com.prot.versioninfo" version "0.5"
}

group 'io.getstream.client'
version = '3.1.4'

dependencies {
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testCompile 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testRuntime 'org.junit.vintage:junit-vintage-engine:5.3.1'
    testCompile 'com.pholser:junit-quickcheck-core:0.8.1'
    testCompile 'com.pholser:junit-quickcheck-generators:0.8.1'

    implementation 'com.google.guava:guava:26.0-jre'

    implementation 'com.squareup.okhttp3:okhttp:3.11.0'

    compile 'com.fasterxml.jackson.core:jackson-core:2.9.6'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.6'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.6'

    compile 'com.auth0:java-jwt:3.4.0'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

test {
    useJUnitPlatform {
        includeEngines 'junit-jupiter', 'junit-vintage'
    }
    testLogging {
        exceptionFormat = 'full'
        events 'standard_out', 'standard_error', "passed", "skipped", "failed"
    }
}

repositories {
    jcenter()
}

processResources {
    filesMatching('stream-java2.info') {
        expand(project.properties)
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'stream-java'
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'client'
                description = 'Stream API official client'
                url = 'https://github.com/GetStream/stream-java'

                scm {
                    url = 'scm:git@github.com:GetStream/stream-java.git'
                    connection = 'scm:git@github.com:GetStream/stream-java.git'
                    developerConnection = 'scm:git@github.com:GetStream/stream-java.git'
                }

                licenses {
                    license {
                        name = 'The 3-Clause BSD License'
                        url = 'https://opensource.org/licenses/BSD-3-Clause'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'sirio7g'
                        name = 'Alessandro Pieri'
                    }
                    developer {
                        id = 'nekuromento'
                        name = 'Max Klyga'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = sonatypeUsername
                password = sonatypePassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
