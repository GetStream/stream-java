name: build

on: [push]

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Release build and publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Restore cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Test
        if: startsWith(github.ref , 'refs/tags/') != true
        env:
          STREAM_KEY: ${{ secrets.STREAM_KEY }}
          STREAM_SECRET: ${{ secrets.STREAM_SECRET }}
        run: |
          ./gradlew spotlessCheck --no-daemon
          ./gradlew test --no-daemon

      - name: Publish to MavenCentral
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sudo bash -c "echo '$GPG_KEY_CONTENTS' | base64 -d > '$SIGNING_SECRET_KEY_RING_FILE'"
          ./gradlew publishReleasePublicationToSonatypeRepository --no-daemon --max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          STREAM_KEY: ${{ secrets.STREAM_KEY }}
          STREAM_SECRET: ${{ secrets.STREAM_SECRET }}
          GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
